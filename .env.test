DATABASE_URL="mongodb+srv://root:root@cluster0.spmcifx.mongodb.net/inventory-testdb?retryWrites=true&w=majority"
  - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/ec2_key ubuntu@${{ secrets.AWS_EC2_PUBLIC_IP }} << 'ENDSSH'
          # Login to Docker Hub
          echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

          # Define image reference
          IMAGE_REF="$DOCKER_HUB_REPO:${{ github.sha }}"

          # Verify image reference format
          if [[ ! "$IMAGE_REF" =~ ^[a-zA-Z0-9._-]+/[a-zA-Z0-9._-]+:[a-zA-Z0-9._-]+$ ]]; then
          echo "ERROR: Invalid Docker image reference format: $IMAGE_REF"
          exit 1
          fi

          # Pull the image (force pull to ensure latest version)
          docker pull "$IMAGE_REF" || {
          echo "ERROR: Failed to pull Docker image"
          exit 1
          }

          # Stop and remove existing container if it exists
          if docker ps -a --format '{{.Names}}' | grep -q '^supplier-service$'; then
            docker stop supplier-service || true
            docker rm supplier-service || true
          fi

          # Run new container
          docker run -d \
              --name supplier-service \
              -p 5003:5003 \
              -e DATABASE_URL="$DATABASE_URL" \
              "$IMAGE_REF" || {
              echo "ERROR: Failed to start container"
              exit 1
          }

          # Verify deployment
          echo "Current containers:"
          docker ps -a
          echo "Container logs:"
          docker logs supplier-service --tail 50
          ENDSSH
PIPLINE_TEST="test3"